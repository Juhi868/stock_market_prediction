import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import yfinance as yf
data = yf.download("AAPL", start="2018-01-01", end="2023-12-31")
print(data.head())
# Use only 'Close' price
data = data[['Close']]

# Create a shifted column for prediction
data['Target'] = data['Close'].shift(-1)

# Drop the last row (NaN target)
data = data.dropna()

X = np.array(data['Close']).reshape(-1, 1)
y = np.array(data['Target'])
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, shuffle=False
)

model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

plt.figure(figsize=(10,5))
plt.plot(y_test, label="Actual Prices", color='blue')
plt.plot(y_pred, label="Predicted Prices", color='red')
plt.legend()
plt.show()
